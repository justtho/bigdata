# Aggregations - total - Get revenue for given order_id

# Aggregations - total
orderItems = sc.textFile("/user/justycx201703/retail_db/order_items")
orderItems.count()
172198

for i in orderItems.take(10): print(i)
1,1,957,1,299.98,299.98
2,2,1073,1,199.99,199.99
3,2,502,5,250.0,50.0
4,2,403,1,129.99,129.99
5,4,897,2,49.98,24.99
6,4,365,5,299.95,59.99
7,4,502,3,150.0,50.0
8,4,1014,4,199.92,49.98
9,5,957,1,299.98,299.98
10,5,365,5,299.95,59.99

# Aggregations for a given ordr id  =2
orderItems = sc.textFile("/user/justycx201703/retail_db/order_items")
for i in orderItems.take(10): print(i)
orderItemsFileterd = orderItems.filter(lambda oi: int(oi.split(",")[1]) ==2)
for i in orderItemsFileterd.take(10): print(i)
2,2,1073,1,199.99,199.99
3,2,502,5,250.0,50.0
4,2,403,1,129.99,129.99

orderItemsSubtotals = orderItemsFileterd.map(lambda oi: float(oi.split(",")[4]))
for i in orderItemsSubtotals.take(10): print(i)
199.99
250.0
129.99
orderItemsSubtotals.reduce(lambda x,y: x+y)
579.98

Alternate way: we get the same answer by using add 
from operator import add
orderItemsSubtotals.reduce(add)
579.98
